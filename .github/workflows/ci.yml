name: ci
env:
  TERM: xterm # Makes tput work in actions output

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request: # Run CI for PRs on any branch
  merge_group:

jobs:
 ci-build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: '10-2020-q4' # The arm-none-eabi-gcc release to use.
      - name: setup-riscv-toolchain
        run: sudo apt-get install -y gcc-riscv64-unknown-elf
      - name: random
        run: curl https://sh.rustup.rs -sSf | sh && source "$HOME/.cargo/env"
# PATH=$PATH:/root/gcc-arm-none-eabi-10.2020.4-linux/gcc-arm-none-eabi-10-2020-q4-major/bin/
# PATH=$PATH:/root/gcc-riscv64-unknown-elf-8.3.0-ubuntu/bin
      - name: ci-build
        run: pushd examples; RISCV=1 ./build_all.sh || exit; popd
      - name: ci-debug-build
        run: pushd examples/blink; make debug RAM_START=0x20004000 FLASH_INIT=0x30051 || exit; popd
